{"version":3,"sources":["sw.js"],"names":["CACHE_VERSION","CACHE_NAME","preCache","caches","delete","then","cache","addAll","CACHE_URLS","self","addEventListener","evt","waitUntil","skipWaiting","keys","forEach","key","console","reqList","open","clients","length","client","log","matchAll","URL","origin","request","clone","response","status","respondWith","match","fetch","responseClone","headers","get","put","catch"],"mappings":"aACA,IAAIA,cAAgB,EAAhBA,WAAAA,UAAJA,cACIC,WAAa,CACjB,IAEE,eAWF,iBACA,mBACE,mBACE,kBACD,eACF,kBATC,qBAeI,SAAAC,WACEC,OAAAA,OAAOC,KAAPH,UAAAE,EAAAE,KAAA,SAAAC,GACD,OAAAA,EAAAC,OAAAC,UAAA,CACF,CAFGL,CAGL,CAGHM,SAAKC,aACHC,OAAIC,OAAUV,KAAVU,EAAUV,KAAWG,SAAUQ,GACnCC,EAAAC,QAAA,SAAAC,GAFFA,IAAAf,YANQE,OAAOC,OAAOY,CAAd,CAYN,CAJA,CAKA,CANIJ,CAOJ,CAEAD,KAAAA,iBACER,UAAYF,SAAYI,GACtBY,EAAAA,UAAYX,SAAAA,EAAZD,KAAAI,KAAAI,WAAYP,CAAZW,CAEA,CAJJN,EAMIF,KAAAC,iBAAO,WAAkB,SAASQ,GAK5BD,EAAAA,UACAd,OAAAgB,KAAIC,UAAJ,EAAeA,KAAQC,SAAQf,GAG5B,OAFDc,QAAAA,IAAAA,CAAAA,EACEE,WAAAA,EADFhB,CAGD,CAJD,EAICD,KAAA,SAAAC,GACF,OAPDA,EAAAQ,KAAA,EAAAT,KAAA,SAAAa,GAQDD,QAAAM,IAAA,UAAAL,CAAA,EAlBPA,EAAAG,QALFZ,KAAAW,QAAAI,SAAA,EAAAnB,KAAA,SAAAe,GAgBYH,QAAQM,IAAI,SAAUH,CAAtB,EAaPV,GAAiBU,EAASC,QAC7BD,EAAAL,QAAA,SAAAO,GACcG,EAAId,YAAR,WAAIc,CACNC,CAFR,CAIC,CAlCH,CAoCE,CArBQ,CAsBRf,CApBU,CADAM,CAwBJ,CA7BF,EA+BAR,KAAAC,iBAAkBiB,QAAQC,SAA1BjB,GAEOkB,IAAAA,IAADlB,EAAakB,QAASC,GAArBD,EACHH,SAAOG,KAAPH,QAKDf,EAAAoB,YACD5B,OAAA6B,MAAOH,EAAPF,OAAA,EAAAtB,KAAA,SAAAwB,GARF,OAAAA,IANJF,EAAAhB,EAAAgB,QAAAC,MAAA,EARFK,MAAAN,CAAA,EAAAtB,KAAA,SAAAwB,GAeQ,IAGIK,EAIJ,OAPKL,GAAgC,MAApBA,EAASC,QAAmBD,EAASM,QAAQC,IAAI,cAArB,EAAqCJ,MAAM,QAA3C,KAGzCE,EAAgBL,EAASD,MAAT,EACpBzB,OAAOgB,KAAKlB,UAAZ,EAAwBI,KAAK,SAASC,GACpCA,EAAM+B,IAAI1B,EAAIgB,QAASO,CAAvB,CACD,CAFD,GAGOL,CACR,CAvBP,EAwBK,CAFG,EAEDS,MAAM,WACP,OAAOnC,OAAO6B,MAAMrB,EAAIgB,OAAjB,CACR,CAJG,CADC,CAOR,CAfK","file":"sw.js","sourcesContent":["\nvar CACHE_VERSION = 0;\nvar CACHE_NAME = 'cache-v' + CACHE_VERSION;\nvar CACHE_URLS = [\n  '/',\n  '/js/index.js',\n  '/css/index.css',\n  '/img/BYJ2015.jpg',\n  '/img/BYJ2016.jpg',\n  '/img/nav-bg.jpg',\n  '/img/xc3.jpg',\n  '/img/xcpost.jpg',\n  '/img/xcpostPc.jpg',\n]\n\n\n/** 预缓存 */\nfunction preCache() {\n  return caches.open(CACHE_NAME).then(function(cache) {\n    return cache.addAll(CACHE_URLS);\n  })\n}\n\n/** 清楚缓存 */\nfunction clearCache() {\n  return caches.keys().then(function(keys) {\n    keys.forEach(function(key) {\n      if (key !== CACHE_NAME) {\n        caches.delete(key)\n      }\n    })\n  })\n}\n\nself.addEventListener('install', function(evt) {\n  evt.waitUntil(preCache().then(self.skipWaiting));\n  // evt.waitUntil(preCache());\n});\n\nself.addEventListener('activate', function(evt) {\n  // evt.waitUntil(Promise.all([\n  //   clearCache(),\n  //   self.clients.claim(),\n  // ]))\n  evt.waitUntil(\n    caches.open(CACHE_NAME).then(function(cache) {\n      console.log(cache)\n      clearCache()\n      return cache;\n    }).then(function (cache) {\n      return cache.keys().then(function(reqList) {\n        console.log('reqList', reqList)\n        // 如果原来 cache 没有内容，则代表第一次安装，不用提示用户\n        if (reqList.length) {\n          self.clients.matchAll().then(function (clients) {\n            console.log('client', clients)\n            if (clients && clients.length) {\n              clients.forEach(function(client) {\n                client.postMessage('sw.update')\n              });\n            }\n          })\n        }\n      })\n    })\n  )\n})\n\nself.addEventListener('fetch', function(evt) {\n  // 判断是否是同域名，如果不是同域名则不处理（cdn情况）\n  var url = new URL(evt.request.url)\n  if (url.origin !== self.origin) {\n    return\n  }\n\n  // 网络请求优先\n  evt.respondWith(\n    caches.match(evt.request).then(function(response) {\n      if (response) {\n        return response;\n      }\n      var request = evt.request.clone();\n      return fetch(request).then(function(response) {\n        if (!response && response.status !== 200 && !response.headers.get('Content-type').match(/imgage/)) {\n          return response;\n        }\n        var responseClone = response.clone();\n        caches.open(CACHE_NAME).then(function(cache) {\n          cache.put(evt.request, responseClone);\n        })\n        return response;\n      })\n    }).catch(function() {\n      return caches.match(evt.request)\n    })\n  )\n})"]}